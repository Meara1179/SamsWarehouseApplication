// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SamsWarehouseApplication.Models;

#nullable disable

namespace SamsWarehouseApplication.Migrations
{
    [DbContext(typeof(ShoppingContext))]
    [Migration("20230525134441_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SamsWarehouseApplication.Models.AppUser", b =>
                {
                    b.Property<int>("AppUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppUserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppUserId"));

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("UserEmail");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserPassword");

                    b.HasKey("AppUserId");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            AppUserId = 1,
                            UserEmail = "test@gmail.com",
                            UserPassword = "TestPassword"
                        });
                });

            modelBuilder.Entity("SamsWarehouseApplication.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ProductName");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float")
                        .HasColumnName("ProductPrice");

                    b.Property<string>("ProductUnit")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ProductUnit");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductName = "Granny Smith Apples",
                            ProductPrice = 5.5,
                            ProductUnit = "1kg"
                        },
                        new
                        {
                            ProductId = 2,
                            ProductName = "Fresh Tomatoes",
                            ProductPrice = 5.9000000000000004,
                            ProductUnit = "500g"
                        },
                        new
                        {
                            ProductId = 3,
                            ProductName = "Watermelon",
                            ProductPrice = 6.5999999999999996,
                            ProductUnit = "Whole"
                        },
                        new
                        {
                            ProductId = 4,
                            ProductName = "Cucumber",
                            ProductPrice = 1.8999999999999999,
                            ProductUnit = "1 whole"
                        },
                        new
                        {
                            ProductId = 5,
                            ProductName = "Red Potato Washed",
                            ProductPrice = 4.0,
                            ProductUnit = "1kg"
                        },
                        new
                        {
                            ProductId = 6,
                            ProductName = "Red Tipped Bananas",
                            ProductPrice = 4.9000000000000004,
                            ProductUnit = "1kg"
                        },
                        new
                        {
                            ProductId = 7,
                            ProductName = "Red Onion",
                            ProductPrice = 3.5,
                            ProductUnit = "1kg"
                        },
                        new
                        {
                            ProductId = 8,
                            ProductName = "Carrots",
                            ProductPrice = 2.0,
                            ProductUnit = "1kg"
                        },
                        new
                        {
                            ProductId = 9,
                            ProductName = "Iceburg Lettuce",
                            ProductPrice = 2.5,
                            ProductUnit = "1"
                        },
                        new
                        {
                            ProductId = 10,
                            ProductName = "Helga's Wholemeal",
                            ProductPrice = 3.7000000000000002,
                            ProductUnit = "1"
                        },
                        new
                        {
                            ProductId = 11,
                            ProductName = "Free Range Chicken",
                            ProductPrice = 7.5,
                            ProductUnit = "1kg"
                        },
                        new
                        {
                            ProductId = 12,
                            ProductName = "Manning Valley 6-pk",
                            ProductPrice = 3.6000000000000001,
                            ProductUnit = "6 eggs"
                        },
                        new
                        {
                            ProductId = 13,
                            ProductName = "A2 Light Milk",
                            ProductPrice = 2.8999999999999999,
                            ProductUnit = "1 litre"
                        },
                        new
                        {
                            ProductId = 14,
                            ProductName = "Chobani Strawberry Yoghurt",
                            ProductPrice = 1.5,
                            ProductUnit = "1"
                        },
                        new
                        {
                            ProductId = 15,
                            ProductName = "Lurpark Salted Blend",
                            ProductPrice = 5.0,
                            ProductUnit = "250g"
                        },
                        new
                        {
                            ProductId = 16,
                            ProductName = "Bega Farmers Tasty",
                            ProductPrice = 4.0,
                            ProductUnit = "250g"
                        },
                        new
                        {
                            ProductId = 17,
                            ProductName = "Babybel Mini",
                            ProductPrice = 4.2000000000000002,
                            ProductUnit = "100g"
                        },
                        new
                        {
                            ProductId = 18,
                            ProductName = "Cobram EVOO",
                            ProductPrice = 8.0,
                            ProductUnit = "375ml"
                        },
                        new
                        {
                            ProductId = 19,
                            ProductName = "Heinz Tomato Soup",
                            ProductPrice = 2.5,
                            ProductUnit = "535g"
                        },
                        new
                        {
                            ProductId = 20,
                            ProductName = "John West Tuna can",
                            ProductPrice = 1.5,
                            ProductUnit = "95g"
                        },
                        new
                        {
                            ProductId = 21,
                            ProductName = "Cadbury Dairy Milk",
                            ProductPrice = 5.0,
                            ProductUnit = "200g"
                        },
                        new
                        {
                            ProductId = 22,
                            ProductName = "Coca Cola",
                            ProductPrice = 2.8500000000000001,
                            ProductUnit = "2 litre"
                        },
                        new
                        {
                            ProductId = 23,
                            ProductName = "Smith's Original Share Pack Crisps",
                            ProductPrice = 3.29,
                            ProductUnit = "170g"
                        },
                        new
                        {
                            ProductId = 24,
                            ProductName = "Birds Eye Fish Fingers",
                            ProductPrice = 4.5,
                            ProductUnit = "375g"
                        },
                        new
                        {
                            ProductId = 25,
                            ProductName = "Berri Orange Juice",
                            ProductPrice = 6.0,
                            ProductUnit = "2 litre"
                        },
                        new
                        {
                            ProductId = 26,
                            ProductName = "Vegemite",
                            ProductPrice = 6.0,
                            ProductUnit = "380g"
                        },
                        new
                        {
                            ProductId = 27,
                            ProductName = "Cheddar Shapes",
                            ProductPrice = 2.0,
                            ProductUnit = "175g"
                        },
                        new
                        {
                            ProductId = 28,
                            ProductName = "Colgate Total ToothPaste",
                            ProductPrice = 3.5,
                            ProductUnit = "110g"
                        },
                        new
                        {
                            ProductId = 29,
                            ProductName = "Milo Chocolate Malt",
                            ProductPrice = 4.0,
                            ProductUnit = "200g"
                        },
                        new
                        {
                            ProductId = 30,
                            ProductName = "Weet Bix Saniatarium Organic",
                            ProductPrice = 5.3300000000000001,
                            ProductUnit = "750g"
                        },
                        new
                        {
                            ProductId = 31,
                            ProductName = "Lindt Excellence 70% Cocoa Block",
                            ProductPrice = 4.25,
                            ProductUnit = "100g"
                        },
                        new
                        {
                            ProductId = 32,
                            ProductName = "Original Tim Tams Chocolate",
                            ProductPrice = 3.6499999999999999,
                            ProductUnit = "200g"
                        },
                        new
                        {
                            ProductId = 33,
                            ProductName = "Philadelphia Original Cream Cheese",
                            ProductPrice = 4.2999999999999998,
                            ProductUnit = "250g"
                        },
                        new
                        {
                            ProductId = 34,
                            ProductName = "Moccona Classic Instant Medium Roast",
                            ProductPrice = 6.0,
                            ProductUnit = "100g"
                        },
                        new
                        {
                            ProductId = 35,
                            ProductName = "Capilano Sqeezable Honey",
                            ProductPrice = 7.3499999999999996,
                            ProductUnit = "500g"
                        },
                        new
                        {
                            ProductId = 36,
                            ProductName = "Nutella Jar",
                            ProductPrice = 4.0,
                            ProductUnit = "400g"
                        },
                        new
                        {
                            ProductId = 37,
                            ProductName = "Arnott's Scotch Finger",
                            ProductPrice = 2.8500000000000001,
                            ProductUnit = "250g"
                        },
                        new
                        {
                            ProductId = 38,
                            ProductName = "South Cape Greek Feta",
                            ProductPrice = 5.0,
                            ProductUnit = "200g"
                        },
                        new
                        {
                            ProductId = 39,
                            ProductName = "Sacla Pasta Tomato Basil Sauce",
                            ProductPrice = 4.5,
                            ProductUnit = "420g"
                        },
                        new
                        {
                            ProductId = 40,
                            ProductName = "Primo English Ham",
                            ProductPrice = 3.0,
                            ProductUnit = "100g"
                        },
                        new
                        {
                            ProductId = 41,
                            ProductName = "Primo Short Cut Rindless Bacon",
                            ProductPrice = 5.0,
                            ProductUnit = "175g"
                        },
                        new
                        {
                            ProductId = 42,
                            ProductName = "Golden Circle Pinapple Pieces in natural juice",
                            ProductPrice = 3.25,
                            ProductUnit = "440g"
                        },
                        new
                        {
                            ProductId = 43,
                            ProductName = "San Renmo Linguine Pasta No 1",
                            ProductPrice = 1.95,
                            ProductUnit = "500g"
                        });
                });

            modelBuilder.Entity("SamsWarehouseApplication.Models.ShoppingList", b =>
                {
                    b.Property<int>("ShoppingListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShoppingListId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingListId"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int")
                        .HasColumnName("AppUserId");

                    b.Property<DateTime>("ShoppingListDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShoppingListName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ShoppingListName");

                    b.HasKey("ShoppingListId");

                    b.HasIndex("AppUserId");

                    b.ToTable("ShoppingLists");
                });

            modelBuilder.Entity("SamsWarehouseApplication.Models.ShoppingListItem", b =>
                {
                    b.Property<int>("ShoppingListItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShoppingListItemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingListItemId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductId");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<int>("ShoppingListId")
                        .HasColumnType("int")
                        .HasColumnName("ShoppingListId");

                    b.HasKey("ShoppingListItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ShoppingItems");
                });

            modelBuilder.Entity("SamsWarehouseApplication.Models.ShoppingList", b =>
                {
                    b.HasOne("SamsWarehouseApplication.Models.AppUser", "User")
                        .WithMany("UserShoppingList")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SamsWarehouseApplication.Models.ShoppingListItem", b =>
                {
                    b.HasOne("SamsWarehouseApplication.Models.Product", "Product")
                        .WithMany("ProductList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SamsWarehouseApplication.Models.ShoppingList", "ShoppingList")
                        .WithMany("ShoppingListItems")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("SamsWarehouseApplication.Models.AppUser", b =>
                {
                    b.Navigation("UserShoppingList");
                });

            modelBuilder.Entity("SamsWarehouseApplication.Models.Product", b =>
                {
                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("SamsWarehouseApplication.Models.ShoppingList", b =>
                {
                    b.Navigation("ShoppingListItems");
                });
#pragma warning restore 612, 618
        }
    }
}
