@model IEnumerable<ShoppingList>

@{
    ViewData["Title"] = "Shopping Lists";
}

<div style="min-height: 65vh">
    <div class="text-center m-2 mb-4">
        <h2>Shopping Lists</h2>
    </div>
    <div class="card" style="background-color: var(--colour-4)">
        <div class="row m-0 justify-content-evenly">
            <div class="col-sm-2 p-1">
                <input type="button" style="width:100%" class="btn btn-success" value="New List" onclick="$('#createShoppingList').modal('show')"/>
            </div>
            <div class="col-sm-8 p-1" id="ddlContainer">
                <select class="form-select" disabled>
                    <option>Loading Shopping Lists...</option>
                </select>
            </div>
            <div class="col-sm-2 p-1">
                <input type="button" style="width:100%" class="btn btn-danger" value="Delete"/>
            </div>
        </div>
    </div>
    <div class="p-2">
        <div class="card" id="shoppingItemContainer" style="min-height: 40vh; background-color: var(--colour-4)"></div>
    </div>
</div>

<div class="modal" id="createShoppingList" tabindex="-1">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
            <div class="modal-header" style="background-color: var(--colour-3)">
                <h5 class="modal-title" style="color: var(--text-colour)">Create Shopping List</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
            <div class="modal-body" id="ModalBody" style="background-color: var(--colour-4)">
            <form id="createShoppingListForm">
                <input type="text" name="listName" class="form-control"/>
                <div class="py-2">
                    @*<input type="submit" value="Add Shopping List" class="btn btn-success"/>*@
                    <button type="submit" class="btn btn-success" id="btnAddShoppingList">
                            Create Shopping List
                    </button>
                </div>
            </form>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
    window.addEventListener("load", async (e) => 
    {
        updateDDL();
        document.getElementById("createShoppingListForm").addEventListener('submit', async (e) => {
            await handleCreateShoppingList(e);
        })
    });

    async function updateDDL()
    {
        let result = await fetch('/ShoppingList/ShoppingListDropDownList');
        let htmlResult = await result.text();
        document.getElementById("ddlContainer").innerHTML = htmlResult;

        let ddlCOntainer = document.getElementById("ddlContainer");
        let ddl = ddlCOntainer.querySelector("select");
        ddl.addEventListener("change", async (e) => 
        {
            handleDDLChange(e);
        })
    }

    async function handleDDLChange(e)
    {
        let selectedOption = e.target.selectedOptions[0];
        sessionStorage.setItem("listID", selectedOption.value);
        sessionStorage.setItem("listName", selectedOption.text);

        RefreshItemList(selectedOption.value);
    }

    async function handleCreateShoppingList(e)
    {
        e.preventDefault();

        let button = document.getElementById("btnAddShoppingList");

        button.setAttribute("disabled", "disabled");
        button.innerHTML = 
        `
            <span class="spinner-border text-danger spinner-border-sm" role="status" aria-hidden="true"></span>
            Please Wait...
        `;

        let result = await fetch("/ShoppingList/AddNewShoppingList", {
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify(e.target["listName"].value)
        });

        if (result.ok)
        {
            await updateDDL();
            $("#createShoppingList").modal("hide");

            button.removeAttribute("disabled");
            button.innerHTML = "Create Shopping List"
        }
    }

    async function removeShoppingListItem(itemID)
    {
        let listID = sessionStorage.getItem("listID");

        let shopListItem = 
        {
            ShoppingListId: listID,
            ProductId: itemID
        }

        let result = await fetch("ShoppingList/RemoveShoppingListItem", {
            method: 'DELETE',
            headers: {
                'content-type': 'application/json'
            },
            body: JSON.stringify(shopListItem)
        });

        if (result.ok)
        {
            RefreshItemList(listID);
        }
    }

    async function RefreshItemList(listID)
    {
        let result = await fetch("/ShoppingList/GetShoppingListItems?listID=" + listID);
        let htmlResult = await result.text();
        document.getElementById("shoppingItemContainer").innerHTML = htmlResult;
    }
</script>